struct ListNode *getIntersectionNode(struct ListNode *headA, struct ListNode *headB) 
{
    //若有一个链表为空，不相交返回空
    if(headA == NULL || headB == NULL)
    {
        return NULL;
    }
    int counta = 0,countb = 0;
    struct ListNode *curA = headA,*curB = headB;
    //判断两个链表的长度
    while(curA->next)
    {
         ++counta;
         curA = curA->next; 
    }
    while(curB->next)
    {
        ++countb;
        curB = curB->next;
    }
    //尾节点位置不相等就没相交
    if(curA != curB)
    {
        return NULL;
    }
    //求两个链表长度的差值的绝对值
    int x = abs(counta - countb);
    //让长链表先走差值个节点
    for(int i = 0;i < x;++i)
    {
        if(counta > countb)
        {
            headA = headA->next;
        }
        else
        {
            headB = headB->next;
        }
    }
    //同时走找交点
    while(headA != headB)
    {
        headA = headA->next;
        headB = headB->next;
    }
    return headA;
}
