struct ListNode* mergeTwoLists(struct ListNode* l1, struct ListNode* l2)
{
    //l1为空返回l2
    if(l1 == NULL)
    {
        return l2;
    }
    //l2为空返回l1
    if(l2 == NULL)
    {
        return l1;
    }
    //头指针
    struct ListNode* head = NULL;
    //尾指针
    struct ListNode* tail = NULL;
    //取两个链表中小的节点放入新链表中
    while(l1 && l2)
    {
        if(l1->val < l2->val)
        {
            if(head == NULL)
            {
                head = tail = l1;
            }
            else
            {
                tail->next = l1;
                tail = l1;
            }
            l1 = l1->next;
        }
        else
        {
            if(head == NULL)
            {
                head = tail = l2;
            }
            else
            {
                tail->next = l2;
                tail = l2;
            }
            l2 = l2->next;
        }
    }
    //l2先结束，l1未结束
    if(l1)
    {
        tail->next = l1;
    }
    //l1先结束，l2未结束
    if(l2)
    {
        tail->next = l2;
    }
    return head;
}
