/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     struct ListNode *next;
 * };
 */


struct ListNode* reverseList(struct ListNode* head){
    //空链表或只有一个节点直接返回头节点
    if(head == NULL || head->next == NULL)
    {
        return head;
    }
    //三个指针，一个指向NULL，一个指向head，一个指向头的下一个节点
    struct ListNode* n1 = NULL;
    struct ListNode* n2 = head;
    struct ListNode* n3 = head->next;
    //当n2不为空，让n2指向n1，然后依次向后移动n1,n2,n3
    while(n2)
    {
        n2->next = n1;
        n1 = n2;
        n2 = n3;
        if(n3 != NULL)
        {
            n3 = n3->next;
        }
    }
    return n1;
}
